//file:noinspection GroovyAssignabilityCheck
//file:noinspection ConfigurationAvoidance
//file:noinspection GrUnresolvedAccess

buildscript {
    def setupRepositories = {
        it.repositories {
            maven {
                url 'https://maven.aliyun.com/repository/public'
            }
            mavenCentral()
            maven {
                url 'https://mirrors.honoka.de/maven-repo'
            }
        }
    }
    setupRepositories(delegate)
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        gradlePluginPortal()
    }
    ext {
        def d = delegate
        d.setupRepositories = setupRepositories
    }
}

plugins {
    id 'java'
}

group = 'de.honoka.sdk'
version = '1.1.7-dev'

allprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = rootProject.group
    sourceCompatibility = '1.8'

    setupRepositories(delegate)

    dependencies {
        String lombok = 'org.projectlombok:lombok:1.18.26'
        compileOnly lombok
        annotationProcessor lombok
        testCompileOnly lombok
        testAnnotationProcessor lombok
        //Test
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    publishing {
        repositories {
            mavenLocal()
            if(project.hasProperty('remoteMavenRepositoryUrl')) {
                maven {
                    url remoteMavenRepositoryUrl
                }
            }
        }
    }

    ext {
        setupVersionAndPublishing = {
            version it

            publishing {
                publications {
                    maven(MavenPublication) {
                        groupId project.group
                        artifactId project.name
                        version it

                        from components.java

                        artifact sourcesJar
                    }
                }
            }
        }
    }
}